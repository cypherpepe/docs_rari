# you must set worker processes based on your CPU cores, nginx does not benefit from setting more than that
worker_processes auto; #some last versions calculate it automatically

# number of file descriptors used for nginx
# the limit for the maximum FDs on the server is usually set by the OS.
# if you don't set FD's then OS settings will be used which is by default 2000
worker_rlimit_nofile 100000;

# only log critical errors
error_log /var/log/nginx/error.log crit;

# provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 4000;

    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on;
}

http {
    # Temporary directories for kubernetes "readonlyfilesystem"
    client_body_temp_path /tmp/nginx-client-body;
    proxy_temp_path       /tmp/nginx-proxy;
    fastcgi_temp_path     /tmp/nginx-fastcgi;
    uwsgi_temp_path       /tmp/nginx-uwsgi;
    scgi_temp_path        /tmp/nginx-scgi;
    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # to boost I/O on HDD we can disable access logs
    access_log off;

    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # reduce the data that needs to be sent over network -- for testing environment
    gzip on;
    # gzip_static on;
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 10;

    # if client stop responding, free up memory -- default 60
    send_timeout 2;

    # server will close connection after this time -- default 75
    keepalive_timeout 30;

    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 100000;

    include /etc/nginx/mime.types;

    server {
        listen 80 default_server;
        root /usr/share/nginx/html;
        index index.html index.htm;
        server_name _;
        location / {
            aio threads;
            try_files $uri /index.html;
        }
        location /env.js {
            aio threads;
            add_header Cache-Control "no-cache";
        }
        location /static/env.js {
            aio threads;
            add_header Cache-Control "no-cache";
        }
        # Redirects
        location /overiew/applications {
            rewrite ^/overiew/applications$ /use-cases
            permanent;
        }
        location /overview/applications/settlement-integration {
            rewrite ^/overview/applications/settlement-integration$ /use-cases/nft-checkout
            permanent;
        }
        location /overview/applications/cross-chain-proofs {
            rewrite ^/overview/applications/cross-chain-proofs$ /use-cases/proofs
            permanent;
        }
        location /overview/applications/cross-chain-minting {
            rewrite ^/overview/applications/cross-chain-minting$ /use-cases/minting
            permanent;
        }
        location /overview/applications/cross-chain-staking {
            rewrite ^/overview/applications/cross-chain-staking$ /use-cases/staking
            permanent;
        }
        location /overview/applications/usdc-integration {
            rewrite ^/overview/applications/usdc-integration$ /use-cases/cctp
            permanent;
        }
        location /overview/design {
            rewrite ^/overview/design$ /architecture
            permanent;
        }
        location /developers/oracles {
            rewrite ^/developers/oracles$ /architecture/oracles
            permanent;
        }
        location /developers/core {
            rewrite ^/developers/core$ /architecture/core
            permanent;
        }
        location /developers/core/rarimocore {
            rewrite ^/developers/core/rarimocore$ /architecture/core/rarimocore
            permanent;
        }
        location /developers/core/tokenmanager {
            rewrite ^/developers/core/tokenmanager$ /architecture/core/tokenmanager
            permanent;
        }
        location /developers/core/oraclemanager {
            rewrite ^/developers/core/oraclemanager$ /architecture/core/oraclemanager
            permanent;
        }
        location /developers/tss {
            rewrite ^/developers/tss$ /architecture/tss
            permanent;
        }
        location /developers/tss/overview {
            rewrite ^/developers/tss/overview$ /architecture/tss/overview
            permanent;
        }
        location /developers/contracts {
            rewrite ^/developers/contracts$ /reference/contracts
            permanent;
        }
        location /smart-contracts/addresses {
            rewrite ^/smart-contracts/addresses$ /reference/contracts/addresses
            permanent;
        }
        location /developers/contracts/bridge {
            rewrite ^/smart-contracts/bridge$ /reference/contracts/bridge
            permanent;
        }
        location /smart-contracts/guides {
            rewrite ^/smart-contracts/guides$ /reference/contracts/guides
            permanent;
        }
        location /smart-contracts/guides/moving-liquidity {
            rewrite ^/smart-contracts/guides/moving-liquidity$ /architecture/swap-bridge
            permanent;
        }
        location /reference/contracts/guides/moving-liquidity {
            rewrite ^/reference/contracts/guides/moving-liquidity$ /architecture/swap-bridge
            permanent;
        }
        location /smart-contracts/guides/transfer-nfts {
            rewrite ^/smart-contracts/guides/transfer-nfts$ /reference/contracts/guides/transfer-nfts
            permanent;
        }
        location /smart-contracts/interface {
            rewrite ^/smart-contracts/interface$ /reference/contracts/interface
            permanent;
        }
        location /smart-contracts/interface/evm-reference {
            rewrite ^/smart-contracts/interface/evm-reference$ /reference/contracts/interface/evm-reference
            permanent;
        }
        location /smart-contracts/interface/near-reference {
            rewrite ^/smart-contracts/interface/near-reference$ /reference/contracts/interface/near-reference
            permanent;
        }
        location /smart-contracts/interface/solana-reference {
            rewrite ^/smart-contracts/interface/solana-reference$ /reference/contracts/interface/solana-reference
            permanent;
        }
    }

}
