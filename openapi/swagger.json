{
  "openapi": "3.0.0",
  "info": {
    "version": "v1",
    "title": "Rarify API",
    "license": {
      "name": "MIT",
      "url": "https://rarify.tech"
    },
    "description": ""
  },
  "servers": [
    {
      "url": "https://api.rarify.tech"
    }
  ],
  "tags": [
    {
      "name": "Activity",
      "x-displayName": "Activity",
      "description": "The endpoint in the /data/activity path provides trading history and other activity for the specified contract, token, or participant."
    },
    {
      "name": "DataContracts",
      "x-displayName": "Contracts",
      "description": "The endpoints in the /data/contracts path provide pricing and trading information about collections of NFTs that are managed by the same smart contract."
    },
    {
      "name": "DataTokens",
      "x-displayName": "Tokens",
      "description": "The endpoints in the /data/tokens path provide pricing and trading information about individual NFTs and the metadata of those NFTs."
    },
    {
      "name": "DataWallets",
      "x-displayName": "Wallets (BETA)",
      "description": "The endpoints in the /data/wallets path provide information about the ownership of NFTs."
    }
  ],
  "x-tagGroups": [
    {
      "name": "",
      "tags": [
        "DataContracts",
        "DataTokens",
        "DataWallets",
        "Activity"
      ]
    }
  ],
  "paths": {
    "/data/activity": {
      "get": {
        "summary": "Activity",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Returns trading history and other activity for the specified contract, token, or wallet.\n",
        "operationId": "listActivity",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET 'https://api.rarify.tech/data/activity' \\\n-G \\\n--header \"Authorization: $RARIFY_API_KEY\" \\\n--data-urlencode 'filter[network]=ethereum'\n"
          }
        ],
        "tags": [
          "Activity"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter[contract]",
            "description": "Show activity for the specified contracts, in a comma-separated list of addresses in the format \"network:contract\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "polygon:0x09aa1a14e572e6fc05f64e541699d3e0361c7f2f"
            }
          },
          {
            "in": "query",
            "name": "filter[token]",
            "description": "Show activity for the specified token, in a comma-separated list in the format \"network:contract:token\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "polygon:0x09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323"
            }
          },
          {
            "in": "query",
            "name": "filter[participant]",
            "description": "Show activity for the specified participant",
            "required": false,
            "schema": {
              "type": "string",
              "example": "polygon:0x2d3fcba1a48a64b84c74deaa436e141979eef233"
            }
          },
          {
            "in": "query",
            "name": "filter[network]",
            "description": "Show activity on the specified networks, in a comma-separated list",
            "required": false,
            "schema": {
              "type": "string",
              "example": "polygon"
            }
          },
          {
            "in": "query",
            "name": "page[limit]",
            "required": false,
            "description": "The number of results per page (default: 10, maximum: 100)",
            "schema": {
              "type": "string",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page[cursor]",
            "required": false,
            "description": "A pointer to start the page of results with. To get a link to the next page, use the URL in the \"links.next\" field in the response, which includes the value for this parameter.",
            "schema": {
              "type": "string",
              "default": "MTY1NjkyMTU3MjAwMA=="
            }
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "The order to sort the results in. Specify `time` to sort from oldest to newest or `-time` (the default) to sort from newest to oldest",
            "schema": {
              "type": "string",
              "default": "-time",
              "enum": [
                "time",
                "-time"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ActivityEntry"
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/TradeOperation"
                          },
                          {
                            "$ref": "#/components/schemas/TransferOperation"
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "30320394:170:0:137",
                        "type": "activity-entries",
                        "attributes": {
                          "block_number": 30320394,
                          "event_index": 0,
                          "log_index": 170,
                          "network": "polygon",
                          "time": "2022-07-04T07:59:32Z",
                          "transaction_hash": "503caea613df0a44afc1af909a8ad99cc344b1be2bf644b4c0aa9cd2f28de8b0"
                        },
                        "relationships": {
                          "transfer": {
                            "data": {
                              "id": "30320394:170:0:137",
                              "type": "operations-transfers"
                            }
                          }
                        }
                      },
                      {
                        "id": "30320369:204:0:137",
                        "type": "activity-entries",
                        "attributes": {
                          "block_number": 30320369,
                          "event_index": 0,
                          "log_index": 204,
                          "network": "polygon",
                          "time": "2022-07-04T07:58:10Z",
                          "transaction_hash": "5bbcaa3eac9e59181540702ac03f3f109f708ffac80064835c3b0d2aa21027f0"
                        },
                        "relationships": {
                          "transfer": {
                            "data": {
                              "id": "30320369:204:0:137",
                              "type": "operations-transfers"
                            }
                          }
                        }
                      },
                      {
                        "id": "27965467:173:0:137",
                        "type": "activity-entries",
                        "attributes": {
                          "block_number": 27965467,
                          "event_index": 0,
                          "log_index": 173,
                          "network": "polygon",
                          "time": "2022-05-05T20:17:29Z",
                          "transaction_hash": "a6ee72af6b8bbabcce563fe1c41b0693b4d8fb688f9d148c37fa4838372d57d6"
                        },
                        "relationships": {
                          "transfer": {
                            "data": {
                              "id": "27965467:173:0:137",
                              "type": "operations-transfers"
                            }
                          }
                        }
                      },
                      {
                        "id": "26269702:56:2:137",
                        "type": "activity-entries",
                        "attributes": {
                          "block_number": 26269702,
                          "event_index": 2,
                          "log_index": 56,
                          "network": "polygon",
                          "time": "2022-03-23T14:16:20Z",
                          "transaction_hash": "73c137ed66c2bea6bbee3c59b5f1692554b9f0e5f0cc454f3d9ef46a626e2c69"
                        },
                        "relationships": {
                          "trade": {
                            "data": {
                              "id": "26269702:56:2:137",
                              "type": "operations-trades"
                            }
                          }
                        }
                      },
                      {
                        "id": "26269702:56:0:137",
                        "type": "activity-entries",
                        "attributes": {
                          "block_number": 26269702,
                          "event_index": 0,
                          "log_index": 56,
                          "network": "polygon",
                          "time": "2022-03-23T14:16:20Z",
                          "transaction_hash": "73c137ed66c2bea6bbee3c59b5f1692554b9f0e5f0cc454f3d9ef46a626e2c69"
                        },
                        "relationships": {
                          "transfer": {
                            "data": {
                              "id": "26269702:56:0:137",
                              "type": "operations-transfers"
                            }
                          }
                        }
                      }
                    ],
                    "included": [
                      {
                        "id": "30320394:170:0:137",
                        "type": "operations-transfers",
                        "attributes": {
                          "amount": "1",
                          "asset": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                          "from": "polygon:2d3fcba1a48a64b84c74deaa436e141979eef233",
                          "to": "polygon:fbe7a5e17568dbe7d1705307b5d1b59e458c768b"
                        },
                        "relationships": {
                          "token": {
                            "data": {
                              "id": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                              "type": "tokens"
                            }
                          }
                        }
                      },
                      {
                        "id": "30320369:204:0:137",
                        "type": "operations-transfers",
                        "attributes": {
                          "amount": "1",
                          "asset": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                          "from": "polygon:fbe7a5e17568dbe7d1705307b5d1b59e458c768b",
                          "to": "polygon:2d3fcba1a48a64b84c74deaa436e141979eef233"
                        },
                        "relationships": {
                          "token": {
                            "data": {
                              "id": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                              "type": "tokens"
                            }
                          }
                        }
                      },
                      {
                        "id": "27965467:173:0:137",
                        "type": "operations-transfers",
                        "attributes": {
                          "amount": "1",
                          "asset": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                          "from": "polygon:2d3fcba1a48a64b84c74deaa436e141979eef233",
                          "to": "polygon:fbe7a5e17568dbe7d1705307b5d1b59e458c768b"
                        },
                        "relationships": {
                          "token": {
                            "data": {
                              "id": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                              "type": "tokens"
                            }
                          }
                        }
                      },
                      {
                        "id": "26269702:56:2:137",
                        "type": "operations-trades",
                        "attributes": {
                          "buy_order": {
                            "amount": "759000000000000000",
                            "asset": "polygon:7ceb23fd6bc0add59e62ac25578270cff1b9f619:00",
                            "owner": "polygon:2d3fcba1a48a64b84c74deaa436e141979eef233"
                          },
                          "sell_order": {
                            "amount": "1",
                            "asset": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                            "owner": "polygon:a9045918216e1bd69489b22657c623711cfb74e6"
                          }
                        }
                      },
                      {
                        "id": "26269702:56:0:137",
                        "type": "operations-transfers",
                        "attributes": {
                          "amount": "1",
                          "asset": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                          "from": "polygon:a9045918216e1bd69489b22657c623711cfb74e6",
                          "to": "polygon:2d3fcba1a48a64b84c74deaa436e141979eef233"
                        },
                        "relationships": {
                          "token": {
                            "data": {
                              "id": "polygon:09aa1a14e572e6fc05f64e541699d3e0361c7f2f:0323",
                              "type": "tokens"
                            }
                          }
                        }
                      }
                    ],
                    "links": {
                      "next": "/data/activity?filter%5Bcontract%5D=polygon%3A0x09aa1a14e572e6fc05f64e541699d3e0361c7f2f&filter%5Bnetwork%5D=polygon&filter%5Bparticipant%5D=polygon%3A0x2d3fcba1a48a64b84c74deaa436e141979eef233&filter%5Btoken%5D=polygon%3A0x09aa1a14e572e6fc05f64e541699d3e0361c7f2f%3A0323&page%5Bcursor%5D=MTY0ODA0NDk4MDAwMA%3D%3D&page%5Blimit%5D=10&sort=-time",
                      "self": "/data/activity?filter%5Bcontract%5D=polygon%3A0x09aa1a14e572e6fc05f64e541699d3e0361c7f2f&filter%5Bnetwork%5D=polygon&filter%5Bparticipant%5D=polygon%3A0x2d3fcba1a48a64b84c74deaa436e141979eef233&filter%5Btoken%5D=polygon%3A0x09aa1a14e572e6fc05f64e541699d3e0361c7f2f%3A0323&page%5Bcursor%5D=MTY1NjkyMTU3MjAwMA%3D%3D&page%5Blimit%5D=10&sort=-time"
                    },
                    "meta": {
                      "next_cursor": "MTY0ODA0NDk4MDAwMA==",
                      "total_results": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenFilters"
          }
        }
      }
    },
    "/data/contracts": {
      "get": {
        "summary": "Search contracts",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Searches the specified networks for contracts that manage collections of NFTs, including ERC721 and ERC1155 contracts. You can sort the results by many factors, including by the number of trades, the number of unique buyers, or the change in trading volume.\n\nWith this endpoint, you can retrieve pricing and trading information for the collections by setting the `include` parameter to `insights` and specifying the time range with the `insights.period` parameter.\n\nYou can retrieve trend information by setting the `include` parameter to `insights_trends` and specifying the time range with the `insights_trends.period` parameter. For example, if you set the `insights_trends.period` parameter to `30d`, the API compares the trading volume (the sum of the price of all trades) for the collection's tokens over the last 30 days with the trading volume of the collection's tokens over the 30 days before that. In the results, the `volume_change` field is the difference in trading volume between the two time periods and the `volume_change_percent` field is the percentage change from the older time period to the more recent time period.\n",
        "operationId": "listDataContractsV2",
        "tags": [
          "DataContracts"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET 'https://api.rarify.tech/data/contracts' \\\n-G \\\n--header \"Authorization: $RARIFY_API_KEY\" \\\n--data-urlencode 'filter[network]=ethereum,polygon' \\\n--data-urlencode 'sort=-insights.volume'\n"
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter[name]",
            "description": "Fuzzy search query for the name of the contract, such as “unicorn\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "CryptoPunks"
            }
          },
          {
            "in": "query",
            "name": "filter[network]",
            "description": "Search the specified networks, in a comma-separated list",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ethereum"
            }
          },
          {
            "in": "query",
            "name": "filter[has_metadata]",
            "description": "Set to true to show only contracts with metadata. By default, all contracts are returned, regardless of metadata. Note that some contracts, such as ERC1155 contracts, do not have contract-level metadata, so setting this field to true omits them.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "in": "query",
            "name": "page[limit]",
            "description": "The number of results per page (default: 10, maximum: 100)",
            "schema": {
              "type": "string",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page[cursor]",
            "description": "A pointer to start the page of results with. To get a link to the next page, use the URL in the \"links.next\" field in the response, which includes the value for this parameter.",
            "example": "OTIyMzM3MjAzNjg1NDc3NTgwNw==:OTIyMzM3MjAzNjg1NDc3NTgwNw==",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The field to sort the results on. By default, the API sorts results in ascending order, so if you sort on the \"insights.min_price\" or \"insights.max_price\" fields, the results start with the lowest minimum or maximum price, respectively. To sort in descending order, prepend a hyphen to the field. For example, if you sort on the \"-insights.min_price\" or \"-insights.max_price\" fields, the results start with the highest minimum or maximum price, respectively.\n\nThe default sort order is by trading volume in descending order. By default, the API uses pricing and trading data from the last 90 days to sort the results.\n\nIf you sort by a field that starts with `insights`, the API uses the time period in the `insights.period` parameter to sort the results, or 90 days by default. If you sort by a field that starts with `insights_trends`, the API uses the time period in the `insights_trends.period` parameter to sort the results, or 90 days by default.\n",
            "schema": {
              "type": "string",
              "default": "-insights.volume",
              "enum": [
                "relevancy",
                "insights.volume",
                "insights.unique_buyers",
                "insights.trades",
                "insights.min_price",
                "insights.max_price",
                "insights_trends.volume_change_percent"
              ]
            }
          },
          {
            "in": "query",
            "name": "include",
            "description": "By default, the response includes the standard metadata; to include custom metadata fields, insights or trends, pass \"metadata,\" \"insights,\" or \"insights_trends.\"",
            "example": "metadata,insights",
            "schema": {
              "type": "string",
              "enum": [
                "insights",
                "insights_trends",
                "metadata"
              ]
            }
          },
          {
            "in": "query",
            "name": "insights.period",
            "description": "The time period for pricing and trading information.",
            "schema": {
              "type": "string",
              "enum": [
                "24h",
                "3d",
                "7d",
                "30d",
                "90d"
              ],
              "example": "7d",
              "default": "90d"
            }
          },
          {
            "in": "query",
            "name": "insights_trends.period",
            "description": "The time period for information about market trends.",
            "schema": {
              "type": "string",
              "enum": [
                "24h",
                "3d",
                "7d",
                "30d",
                "90d"
              ],
              "example": "7d",
              "default": "90d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataContract"
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/RawMetadata"
                          },
                          {
                            "$ref": "#/components/schemas/InsightsOverview"
                          },
                          {
                            "$ref": "#/components/schemas/InsightsTrends"
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "ethereum:c36442b4a4522e871399cd717abdd847ab11fe88",
                        "type": "contracts",
                        "attributes": {
                          "address": "c36442b4a4522e871399cd717abdd847ab11fe88",
                          "name": "Uniswap V3 Positions NFT-V1",
                          "network": "ethereum",
                          "primary_interface": "erc_721",
                          "tokens": 254435,
                          "unique_owners": 71788
                        },
                        "relationships": {}
                      },
                      {
                        "id": "ethereum:4e1f41613c9084fdb9e34e11fae9412427480e56",
                        "type": "contracts",
                        "attributes": {
                          "address": "4e1f41613c9084fdb9e34e11fae9412427480e56",
                          "name": "Terraforms",
                          "network": "ethereum",
                          "primary_interface": "erc_721",
                          "tokens": 9909,
                          "unique_owners": 2147
                        },
                        "relationships": {}
                      }
                    ],
                    "included": [],
                    "links": {
                      "next": "/data/contracts?filter%5Bnetwork%5D=ethereum%2Cpolygon&insights.period=90d&insights_trends.period=90d&page%5Bcursor%5D=MTEzMzA3MzM5MTE3MQ%3D%3D%3ANDkyMzIy&page%5Blimit%5D=2&sort=-insights.volume",
                      "self": "/data/contracts?filter%5Bnetwork%5D=ethereum%2Cpolygon&insights.period=90d&insights_trends.period=90d&page%5Blimit%5D=2&sort=-insights.volume"
                    },
                    "meta": {
                      "next_cursor": "MTEzMzA3MzM5MTE3MQ==:NDkyMzIy",
                      "total_results": 10000
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          }
        }
      }
    },
    "/data/contracts/{id}": {
      "get": {
        "summary": "Get contract",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Returns information about the specified contract by its ID. Include the `include=insights,insights_history` parameter for historical pricing and trading information based on block-by-block traversal of the network.\n",
        "operationId": "getDataContractsV2",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET 'https://api.rarify.tech/data/contracts/ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb' \\\n-G \\\n--header \"Authorization: $RARIFY_API_KEY\" \\\n--data-urlencode 'include=insights_history'\n"
          }
        ],
        "tags": [
          "DataContracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the contract, in the format \"network:contract\"",
            "schema": {
              "type": "string",
              "example": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb"
            }
          },
          {
            "in": "query",
            "name": "include",
            "description": "The resources to include in the response; \"insights\" provides aggregated pricing and trading information for the previous 90 days and \"insights_history\" provides pricing and trading information for each day in the last 90 days, \"token_attributes returns list of attributes that are available for tokens within a contract\"",
            "example": "insights,insights_history",
            "schema": {
              "type": "string",
              "enum": [
                "metadata",
                "insights",
                "insights_history",
                "token_attributes"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DataContract"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/InsightsHistory"
                          },
                          {
                            "$ref": "#/components/schemas/RawMetadata"
                          },
                          {
                            "$ref": "#/components/schemas/InsightsOverview"
                          },
                          {
                            "$ref": "#/components/schemas/TokenAttributesStats"
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "data": {
                      "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                      "type": "contracts",
                      "attributes": {
                        "address": "b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                        "description": "CryptoPunks launched as a fixed set of 10,000 items in mid-2017 and became one of the inspirations for the ERC-721 standard. They have been featured in places like The New York Times, Christie’s of London, Art|Basel Miami, and The PBS NewsHour.",
                        "external_url": "https://www.larvalabs.com/cryptopunks",
                        "image_url": "https://rarify-public.s3.amazonaws.com/cryptopunks.png",
                        "name": "CryptoPunks",
                        "network": "ethereum",
                        "primary_interface": "crypto_punk",
                        "royalties_fee_basic_points": 0,
                        "royalties_receiver": "",
                        "tokens": 10000,
                        "unique_owners": 3374
                      },
                      "relationships": {
                        "insights": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                            "type": "insights-overview"
                          }
                        },
                        "insights_history": {
                          "data": {
                            "id": "b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                            "type": "insights-history"
                          }
                        },
                        "metadata": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                            "type": "raw-metadata"
                          }
                        }
                      }
                    },
                    "included": [
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                        "type": "raw-metadata",
                        "attributes": {
                          "payload": {
                            "name": "CryptoPunks",
                            "image": "https://rarify-public.s3.amazonaws.com/cryptopunks.png",
                            "description": "CryptoPunks launched as a fixed set of 10,000 items in mid-2017 and became one of the inspirations for the ERC-721 standard. They have been featured in places like The New York Times, Christie’s of London, Art|Basel Miami, and The PBS NewsHour.",
                            "external_link": "https://www.larvalabs.com/cryptopunks",
                            "fee_recipient": "",
                            "seller_fee_basis_points": 0
                          },
                          "updated_at": "2022-03-09T07:26:50.789265Z",
                          "url": "data:application/json;base64,eyJkZXNjcmlwdGlvbiI6IkNyeXB0b1B1bmtzIGxhdW5jaGVkIGFzIGEgZml4ZWQgc2V0IG9mIDEwLDAwMCBpdGVtcyBpbiBtaWQtMjAxNyBhbmQgYmVjYW1lIG9uZSBvZiB0aGUgaW5zcGlyYXRpb25zIGZvciB0aGUgRVJDLTcyMSBzdGFuZGFyZC4gVGhleSBoYXZlIGJlZW4gZmVhdHVyZWQgaW4gcGxhY2VzIGxpa2UgVGhlIE5ldyBZb3JrIFRpbWVzLCBDaHJpc3RpZeKAmXMgb2YgTG9uZG9uLCBBcnR8QmFzZWwgTWlhbWksIGFuZCBUaGUgUEJTIE5ld3NIb3VyLiIsImV4dGVybmFsX2xpbmsiOiJodHRwczovL3d3dy5sYXJ2YWxhYnMuY29tL2NyeXB0b3B1bmtzIiwiZmVlX3JlY2lwaWVudCI6IiIsImltYWdlIjoiaHR0cHM6Ly9yYXJpZnktcHVibGljLnMzLmFtYXpvbmF3cy5jb20vY3J5cHRvcHVua3MucG5nIiwibmFtZSI6IkNyeXB0b1B1bmtzIiwic2VsbGVyX2ZlZV9iYXNpc19wb2ludHMiOjB9"
                        }
                      },
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                        "type": "insights-overview",
                        "attributes": {
                          "avg_price": "77054828000000000000",
                          "max_price": "1050000000000000000000",
                          "min_price": "47500000000000000000",
                          "payment_asset": {
                            "code": "ETH",
                            "image_url": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
                          },
                          "trades": 659,
                          "unique_buyers": 413,
                          "volume": "50779131894000000000000"
                        }
                      },
                      {
                        "id": "b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                        "type": "insights-history",
                        "attributes": {
                          "history": [
                            {
                              "avg_price": "92500000000000000000",
                              "max_price": "95000000000000000000",
                              "min_price": "90000000000000000000",
                              "time": "2022-02-15T00:00:00Z",
                              "trades": 2,
                              "unique_buyers": 2,
                              "volume": "185000000000000000000"
                            },
                            {
                              "avg_price": "76480000000000000000",
                              "max_price": "76480000000000000000",
                              "min_price": "76480000000000000000",
                              "time": "2022-02-16T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "76480000000000000000"
                            },
                            {
                              "avg_price": "77195000000000000000",
                              "max_price": "84990000000000000000",
                              "min_price": "69400000000000000000",
                              "time": "2022-02-17T00:00:00Z",
                              "trades": 2,
                              "unique_buyers": 2,
                              "volume": "154390000000000000000"
                            },
                            {
                              "avg_price": "71107500000000000000",
                              "max_price": "75000000000000000000",
                              "min_price": "67950000000000000000",
                              "time": "2022-02-18T00:00:00Z",
                              "trades": 4,
                              "unique_buyers": 4,
                              "volume": "284430000000000000000"
                            }
                          ],
                          "payment_asset": {
                            "code": "ETH",
                            "image_url": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/data/contracts/{id}/smart-floor-price": {
      "get": {
        "summary": "Get contract smart floor price",
        "description": "Provides an estimated minimum price that an NFT in a collection will sell for. This price is calculated by an algorithm that takes many factors into account, including recent sales and price trends. It is more accurate and more difficult to manipulate than the floor price because it ignores outliers and wash trading and takes the actions of multiple buyers into account.",
        "security": [
          {
            "APIToken": []
          }
        ],
        "operationId": "getContractSmartFloorPrice",
        "tags": [
          "DataContracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the contract, in the format \"network:contract\"",
            "schema": {
              "type": "string",
              "example": "ethereum:bc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FloorPrice"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "description": "Requested contract does not exist or there is not enough data samples to provide accurate estimate."
          }
        }
      }
    },
    "/data/contracts/{id}/insights/{period}": {
      "get": {
        "summary": "Get contract insights",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Returns historical pricing and trading information about a contract's tokens (NFTs) for the specified time period. Prices are in wei, or 10<sup>-18</sup> ether.\n",
        "operationId": "getDataContractsInsightsV2",
        "tags": [
          "DataContracts"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET 'https://api.rarify.tech/data/contracts/ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb/insights/7d' \\\n--header \"Authorization: $RARIFY_API_KEY\"\n"
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the contract, in the format \"network:contract\"",
            "schema": {
              "type": "string",
              "example": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb"
            }
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "description": "The time period for pricing and trading information",
            "schema": {
              "type": "string",
              "enum": [
                "24h",
                "3d",
                "7d",
                "30d",
                "90d",
                "365d",
                "all_time"
              ]
            }
          },
          {
            "in": "query",
            "name": "include",
            "description": "The resources to include in the response. You can choose to include metadata and an aggregation of price history over the last 90days. By default, both are returned.",
            "example": "insights,insights_history",
            "schema": {
              "type": "string",
              "enum": [
                "insights",
                "insights_history",
                "all"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Insights"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/InsightsOverview"
                          },
                          {
                            "$ref": "#/components/schemas/InsightsHistory"
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "data": {
                      "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:7d",
                      "type": "insights",
                      "relationships": {
                        "history": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:7d",
                            "type": "insights-history"
                          }
                        },
                        "insights": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:7d",
                            "type": "insights-overview"
                          }
                        }
                      }
                    },
                    "included": [
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:7d",
                        "type": "insights-overview",
                        "attributes": {
                          "avg_price": "57980640000000000000",
                          "max_price": "155000000000000000000",
                          "min_price": "47500000000000000000",
                          "payment_asset": {
                            "code": "ETH",
                            "image_url": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
                          },
                          "trades": 75,
                          "unique_buyers": 54,
                          "volume": "4348548000000000000000"
                        }
                      },
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:7d",
                        "type": "insights-history",
                        "attributes": {
                          "history": [
                            {
                              "avg_price": "52316666000000000000",
                              "max_price": "54950000000000000000",
                              "min_price": "50000000000000000000",
                              "time": "2022-05-09T00:00:00Z",
                              "trades": 3,
                              "unique_buyers": 2,
                              "volume": "156950000000000000000"
                            },
                            {
                              "avg_price": "59557142000000000000",
                              "max_price": "69000000000000000000",
                              "min_price": "52550000000000000000",
                              "time": "2022-05-10T00:00:00Z",
                              "trades": 7,
                              "unique_buyers": 6,
                              "volume": "416900000000000000000"
                            },
                            {
                              "avg_price": "52280000000000000000",
                              "max_price": "57000000000000000000",
                              "min_price": "49500000000000000000",
                              "time": "2022-05-11T00:00:00Z",
                              "trades": 6,
                              "unique_buyers": 4,
                              "volume": "313680000000000000000"
                            },
                            {
                              "avg_price": "57355000000000000000",
                              "max_price": "69690000000000000000",
                              "min_price": "49500000000000000000",
                              "time": "2022-05-12T00:00:00Z",
                              "trades": 10,
                              "unique_buyers": 10,
                              "volume": "573550000000000000000"
                            },
                            {
                              "avg_price": "58173000000000000000",
                              "max_price": "80000000000000000000",
                              "min_price": "47500000000000000000",
                              "time": "2022-05-13T00:00:00Z",
                              "trades": 10,
                              "unique_buyers": 10,
                              "volume": "581730000000000000000"
                            },
                            {
                              "avg_price": "57150000000000000000",
                              "max_price": "62550000000000000000",
                              "min_price": "48900000000000000000",
                              "time": "2022-05-14T00:00:00Z",
                              "trades": 3,
                              "unique_buyers": 3,
                              "volume": "171450000000000000000"
                            },
                            {
                              "avg_price": "59762344000000000000",
                              "max_price": "155000000000000000000",
                              "min_price": "48850000000000000000",
                              "time": "2022-05-15T00:00:00Z",
                              "trades": 29,
                              "unique_buyers": 17,
                              "volume": "1733108000000000000000"
                            },
                            {
                              "avg_price": "56991250000000000000",
                              "max_price": "65000000000000000000",
                              "min_price": "49990000000000000000",
                              "time": "2022-05-16T00:00:00Z",
                              "trades": 8,
                              "unique_buyers": 8,
                              "volume": "455930000000000000000"
                            }
                          ],
                          "payment_asset": {
                            "code": "ETH",
                            "image_url": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/data/contracts/{id}/whales": {
      "get": {
        "operationId": "getDataContractWhales",
        "summary": "Get top contract owners",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Returns the 100 accounts that own the most tokens in the specified contract.\n\nIn the case of ERC1155 contracts, which can contain multiple types of tokens, the `tokens` field in the response is the number of different types of tokens that the account owns. For example, if an account owns 5000 tokens of type A and 1 token of type B, the `tokens` field is set to 2.\n",
        "tags": [
          "DataContracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the contract, in the format `network:contract`",
            "schema": {
              "type": "string",
              "example": "ethereum:0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Whale"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/data/contracts/{id}/metadata-refresh": {
      "post": {
        "summary": "Request Contract Metadata refresh",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Triggers metadata refresh for the specific contract.\n",
        "operationId": "requestContractMetadataRefresh",
        "tags": [
          "DataContracts"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl --location --request POST 'https://api.rarify.tech/data/contracts/ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb/metadata-refresh' \\\n--header 'Accept: application/vnd.api+json' \\\n--header \"Authorization: $RARIFY_API_KEY\"\n"
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the contract, in the format \"network:contract\"",
            "schema": {
              "type": "string",
              "example": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request has been accepted for processing",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataRefresh"
                    }
                  },
                  "example": {
                    "data": {
                      "id": "ethereum:bc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
                      "type": "contract-metadata-refresh-action",
                      "attributes": {
                        "created_at": "2022-05-16T16:01:01.190857253Z"
                      },
                      "relationships": {
                        "contract": {
                          "data": {
                            "id": "ethereum:bc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
                            "type": "contracts"
                          }
                        },
                        "requester": {
                          "data": {
                            "id": "05eba1a1-e1c2-4324-98b7-0139b36fef54",
                            "type": "identities"
                          }
                        }
                      }
                    },
                    "included": []
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/data/contracts/{id}/active_accounts/{period}": {
      "get": {
        "operationId": "getDataAccountActivity",
        "summary": "Get top 100 accounts that interacted with the contract.",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Returns the 100 accounts that interacted the most with tokens of the specified contract.\n",
        "tags": [
          "DataContracts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the contract, in the format `network:contract`",
            "schema": {
              "type": "string",
              "example": "ethereum:0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d"
            }
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "description": "The time period for activity info.",
            "schema": {
              "type": "string",
              "enum": [
                "24h",
                "3d",
                "7d",
                "30d",
                "90d",
                "365d",
                "all_time"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountActivity"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/data/tokens": {
      "get": {
        "summary": "Search for tokens",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Searches the specified networks and contracts for NFTs, including tokens managed by ERC721 and ERC1155 contracts.\n",
        "operationId": "listDataTokensV2",
        "tags": [
          "DataTokens"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET 'https://api.rarify.tech/data/tokens' \\\n-G \\\n--header \"Authorization: $RARIFY_API_KEY\" \\\n--data-urlencode 'filter[contract]=ethereum:0x06012c8cf97bead5deae237070f9587f8e7a266d' \\\n--data-urlencode 'filter[name]=Punk'\n"
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter[name]",
            "description": "Fuzzy search query for the name of the token, such as “unicorn”",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Punk"
            }
          },
          {
            "in": "query",
            "name": "filter[contract.network]",
            "description": "Search the specified networks, in a comma-separated list",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ethereum"
            }
          },
          {
            "in": "query",
            "name": "filter[has_metadata]",
            "description": "Set to true to show only tokens with metadata. By default, all tokens are returned, regardless of metadata.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "in": "query",
            "name": "filter[contract]",
            "description": "Search tokens managed by the specified contracts, in a comma-separated list of addresses in the format \"network:contract\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ethereum:0x06012c8cf97bead5deae237070f9587f8e7a266d"
            }
          },
          {
            "in": "query",
            "name": "page[limit]",
            "description": "The number of results per page (default: 10, maximum: 100)",
            "schema": {
              "type": "string",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page[cursor]",
            "description": "A pointer to start the page of results with. To get a link to the next page, use the URL in the \"links.next\" field in the response, which includes the value for this parameter.",
            "schema": {
              "type": "string",
              "example": "OTIyMzM3MjAzNjg1NDc3NTgwNw==:OTIyMzM3MjAzNjg1NDc3NTgwNw=="
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The field to sort the results on. By default, the API sorts results in ascending order, so if you sort on the \"relevancy\", the results start with the least relevant. To sort in descending order, append a hyphen to the field. For example, if you sort on the \"-relevancy\" fields, the results start with the most relevant. The default sort order is by relevancy in descending order.",
            "schema": {
              "type": "string",
              "enum": [
                "-relevancy"
              ]
            }
          },
          {
            "in": "query",
            "name": "include",
            "description": "By default, the response includes the standard metadata; to include custom metadata fields or insights from the previous 90 days, pass \"metadata\" or \"insights\"",
            "schema": {
              "type": "string",
              "enum": [
                "metadata",
                "contract"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataToken"
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/RawMetadata"
                          },
                          {
                            "$ref": "#/components/schemas/DataContract"
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "ethereum:06012c8cf97bead5deae237070f9587f8e7a266d:17474c",
                        "type": "tokens",
                        "attributes": {
                          "description": "Ugh! My real name is unspeakable in the human language, so you can call me Punk. I've never actually finished Captain America: Civil War, I get too distracted with inheriting millions. Your secret is safe with me.",
                          "image_url": "https://img.cn.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1525580.svg",
                          "name": "Punk",
                          "token_id": "17474c"
                        },
                        "relationships": {
                          "contract": {
                            "data": {
                              "id": "ethereum:06012c8cf97bead5deae237070f9587f8e7a266d",
                              "type": "contracts"
                            }
                          }
                        }
                      },
                      {
                        "id": "ethereum:06012c8cf97bead5deae237070f9587f8e7a266d:0c2043",
                        "type": "tokens",
                        "attributes": {
                          "description": "Shalom. My name is Punk. I make a mean flaming tacos casserole. If you want to join me and my clique, you should know that on Wednesdays we wear pink. Are you a parking ticket? ‘Cause you’ve got fine written all over you.",
                          "image_url": "https://img.cn.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/794691.svg",
                          "name": "Punk",
                          "token_id": "0c2043"
                        },
                        "relationships": {
                          "contract": {
                            "data": {
                              "id": "ethereum:06012c8cf97bead5deae237070f9587f8e7a266d",
                              "type": "contracts"
                            }
                          }
                        }
                      }
                    ],
                    "included": [
                      {
                        "id": "ethereum:06012c8cf97bead5deae237070f9587f8e7a266d",
                        "type": "contracts",
                        "attributes": {
                          "address": "06012c8cf97bead5deae237070f9587f8e7a266d",
                          "description": "CryptoKitties is a game centered around breedable, collectible, and oh-so-adorable creatures we call CryptoKitties! Each cat is one-of-a-kind and 100% owned by you; it cannot be replicated, taken away, or destroyed.",
                          "external_url": "https://www.cryptokitties.co",
                          "image_url": "https://rarify-public.s3.amazonaws.com/cryptokitties.svg",
                          "name": "CryptoKitties",
                          "network": "ethereum",
                          "primary_interface": "erc_721",
                          "royalties_fee_basic_points": 0,
                          "royalties_receiver": ""
                        },
                        "relationships": {}
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          }
        }
      }
    },
    "/data/tokens/{id}": {
      "get": {
        "summary": "Get token",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Returns information about the specified token by its ID. Include the `include=insights,insights_history` parameter for historical pricing and trading information based on block-by-block traversal of the network, or include the `include=metadata,attributes_stats` parameter for detailed metadata for the token and statistics about the rarity of its attributes.\n\nThe token ID must be in hex format and have an even number of digits. If your token ID has an odd number of digits, prepend a zero, as in the ID 050a.\n\nThe response includes three images: `image_url` is the original image, `image_preview_large_url` is a preview scaled to 1000px, and `image_preview_small_url` is a preview scaled to 500px. If the original image is less than 1000 or 500 pixels, the previews show the original image.\n",
        "operationId": "getDataTokensV2",
        "tags": [
          "DataTokens"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET 'https://api.rarify.tech/data/tokens/ethereum:0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb:0x092C' \\\n-G \\\n--header \"Authorization: $RARIFY_API_KEY\" \\\n--data-urlencode 'include=insights,insights_history,metadata'\n"
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the token, in the format \"network:contract:token\"",
            "schema": {
              "type": "string",
              "example": "ethereum:0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb:0x092C"
            }
          },
          {
            "in": "query",
            "name": "include",
            "description": "The resources to include in the response, such as the historical pricing and trading information from the last 90 days",
            "schema": {
              "type": "string",
              "enum": [
                "insights",
                "insights_history",
                "contract",
                "metadata",
                "attributes_stats"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DataToken"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/InsightsHistory"
                          },
                          {
                            "$ref": "#/components/schemas/RawMetadata"
                          },
                          {
                            "$ref": "#/components/schemas/InsightsOverview"
                          },
                          {
                            "$ref": "#/components/schemas/DataContract"
                          },
                          {
                            "$ref": "#/components/schemas/TokenAttributesStats"
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "data": {
                      "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c",
                      "type": "tokens",
                      "attributes": {
                        "description": "",
                        "image_preview_large_url": "https://imgs.rarify.tech/nepOyTiYHnQq_4GAHE5KJP57wkE2KgS9Z82du8stH_o/rs:fit:1000:1000/q:87/aHR0cHM6Ly93d3cubGFydmFsYWJzLmNvbS9jcnlwdG9wdW5rcy9jcnlwdG9wdW5rMjM0OC5wbmc.webp",
                        "image_preview_small_url": "https://imgs.rarify.tech/sCDhpcpDm5DNSRpX710TE4v7pbZkUkqwPvZlc-gEuI0/rs:fit:500:500/q:87/aHR0cHM6Ly93d3cubGFydmFsYWJzLmNvbS9jcnlwdG9wdW5rcy9jcnlwdG9wdW5rMjM0OC5wbmc.webp",
                        "image_url": "https://www.larvalabs.com/cryptopunks/cryptopunk2348.png",
                        "name": "CryptoPunk #2348",
                        "token_id": "092c"
                      },
                      "relationships": {
                        "insights": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c",
                            "type": "insights-overview"
                          }
                        },
                        "insights_history": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c",
                            "type": "insights-history"
                          }
                        },
                        "metadata": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c",
                            "type": "raw-metadata"
                          }
                        }
                      }
                    },
                    "included": [
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c",
                        "type": "raw-metadata",
                        "attributes": {
                          "payload": {
                            "name": "CryptoPunk #2348",
                            "image": "https://www.larvalabs.com/cryptopunks/cryptopunk2348.png",
                            "creator": "",
                            "attributes": [
                              {
                                "value": "Male",
                                "trait_type": "type"
                              },
                              {
                                "value": "3 attributes",
                                "trait_type": "accessory"
                              },
                              {
                                "value": "Front Beard",
                                "trait_type": "accessory"
                              },
                              {
                                "value": "Mohawk Thin",
                                "trait_type": "accessory"
                              },
                              {
                                "value": "Small Shades",
                                "trait_type": "accessory"
                              }
                            ],
                            "created_at": "2019-04-26T22:13:09Z",
                            "description": ""
                          },
                          "updated_at": "2022-07-25T10:04:13Z"
                        }
                      },
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c",
                        "type": "insights-overview",
                        "attributes": {
                          "avg_price": "67046666000000000000",
                          "max_price": "76700000000000000000",
                          "min_price": "54750000000000000000",
                          "payment_asset": {
                            "code": "ETH",
                            "image_url": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
                          },
                          "period": "90d",
                          "trades": 3,
                          "unique_buyers": 3,
                          "volume": "201140000000000000000"
                        }
                      },
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c",
                        "type": "insights-history",
                        "attributes": {
                          "history": [
                            {
                              "avg_price": "54750000000000000000",
                              "max_price": "54750000000000000000",
                              "min_price": "54750000000000000000",
                              "time": "2022-05-16T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "54750000000000000000"
                            },
                            {
                              "avg_price": "69690000000000000000",
                              "max_price": "69690000000000000000",
                              "min_price": "69690000000000000000",
                              "time": "2022-06-19T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "69690000000000000000"
                            },
                            {
                              "avg_price": "76700000000000000000",
                              "max_price": "76700000000000000000",
                              "min_price": "76700000000000000000",
                              "time": "2022-06-28T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "76700000000000000000"
                            }
                          ],
                          "payment_asset": {
                            "code": "ETH",
                            "image_url": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/data/tokens/{id}/insights/{period}": {
      "get": {
        "summary": "Get token insights",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Returns historical pricing and trading information about tokens (NFTs) for the specified time period. Prices are in wei, or 10<sup>-18</sup> ether.\n",
        "operationId": "getDataTokensInsightsV2",
        "tags": [
          "DataTokens"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET 'https://api.rarify.tech/data/tokens/ethereum:0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb:0x092C/insights/all_time' \\\n--header \"Authorization: $RARIFY_API_KEY\"\n"
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the token, in the format \"network:contract:token\"",
            "schema": {
              "type": "string",
              "example": "ethereum:0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb:0x092C"
            }
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "description": "The time period for pricing and trading information",
            "schema": {
              "type": "string",
              "enum": [
                "24h",
                "7d",
                "30d",
                "90d",
                "365d",
                "all_time"
              ]
            }
          },
          {
            "in": "query",
            "name": "include",
            "description": "The resource to include in the response. You can choose to include metadata and an aggregation of price history over the last 90days. By default, both are returned.",
            "schema": {
              "type": "string",
              "enum": [
                "insights",
                "insights_history",
                "all"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Insights"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/InsightsOverview"
                          },
                          {
                            "$ref": "#/components/schemas/InsightsHistory"
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "data": {
                      "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c:all_time",
                      "type": "insights",
                      "relationships": {
                        "history": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c:all_time",
                            "type": "insights-history"
                          }
                        },
                        "insights": {
                          "data": {
                            "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c:all_time",
                            "type": "insights-overview"
                          }
                        }
                      }
                    },
                    "included": [
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c:all_time",
                        "type": "insights-overview",
                        "attributes": {
                          "avg_price": "45423333000000000000",
                          "max_price": "80950000000000000000",
                          "min_price": "16900000000000000000",
                          "payment_asset": {
                            "code": "ETH",
                            "image_url": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
                          },
                          "trades": 6,
                          "unique_buyers": 6,
                          "volume": "272540000000000000000"
                        }
                      },
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:092c:all_time",
                        "type": "insights-history",
                        "attributes": {
                          "history": [
                            {
                              "avg_price": "20500000000000000000",
                              "max_price": "20500000000000000000",
                              "min_price": "20500000000000000000",
                              "time": "2021-03-11T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "20500000000000000000"
                            },
                            {
                              "avg_price": "16900000000000000000",
                              "max_price": "16900000000000000000",
                              "min_price": "16900000000000000000",
                              "time": "2021-05-11T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "16900000000000000000"
                            },
                            {
                              "avg_price": "19990000000000000000",
                              "max_price": "19990000000000000000",
                              "min_price": "19990000000000000000",
                              "time": "2021-07-17T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "19990000000000000000"
                            },
                            {
                              "avg_price": "79450000000000000000",
                              "max_price": "79450000000000000000",
                              "min_price": "79450000000000000000",
                              "time": "2022-01-25T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "79450000000000000000"
                            },
                            {
                              "avg_price": "80950000000000000000",
                              "max_price": "80950000000000000000",
                              "min_price": "80950000000000000000",
                              "time": "2022-01-26T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "80950000000000000000"
                            },
                            {
                              "avg_price": "54750000000000000000",
                              "max_price": "54750000000000000000",
                              "min_price": "54750000000000000000",
                              "time": "2022-05-16T00:00:00Z",
                              "trades": 1,
                              "unique_buyers": 1,
                              "volume": "54750000000000000000"
                            }
                          ],
                          "payment_asset": {
                            "code": "ETH",
                            "image_url": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/data/tokens/{id}/metadata-refresh": {
      "post": {
        "summary": "Refresh token metadata",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Updates the API's cache of metadata for a token. After you send this request, wait about a minute and then you can use `GET /data/tokens/{id}` to get the up-to-date metadata for the token.\n",
        "operationId": "requestTokenMetadataRefresh",
        "tags": [
          "DataTokens"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl --location --request POST 'https://api.rarify.tech/data/tokens/ethereum:0x06012c8cf97bead5deae237070f9587f8e7a266d:0x092C/metadata-refresh' \\\n--header 'Accept: application/vnd.api+json' \\\n--header 'Authorization: Bearer $RARIFY_API_KEY'\n"
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the token, in the format \"network:contract:token_id\"",
            "schema": {
              "type": "string",
              "example": "ethereum:0x06012c8cf97bead5deae237070f9587f8e7a266d:0x092C"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request has been accepted for processing",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataRefresh"
                    }
                  },
                  "example": {
                    "data": {
                      "id": "ethereum:06012c8cf97bead5deae237070f9587f8e7a266d:092c",
                      "type": "token-metadata-refresh-action",
                      "attributes": {
                        "created_at": "2022-05-16T16:16:11.604636225Z"
                      },
                      "relationships": {
                        "requester": {
                          "data": {
                            "id": "05eba1a1-e1c2-4324-98b7-0139b36fef54",
                            "type": "identities"
                          }
                        },
                        "token": {
                          "data": {
                            "id": "ethereum:06012c8cf97bead5deae237070f9587f8e7a266d:092c",
                            "type": "tokens"
                          }
                        }
                      }
                    },
                    "included": []
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/data/wallets": {
      "get": {
        "summary": "Get information about wallets",
        "security": [
          {
            "APIToken": []
          }
        ],
        "description": "Returns wallets and information about the NFTs in those wallets. At least one filter (token, contract, or owner) must be passed in to retrieve wallets.\nIn this context, a _wallet_ is the virtual relationship between a blockchain account and a specific token. If an account owns an NFT, the endpoint shows that the account owns a wallet that contains one token. If an account owns a certain number of fungible tokens, the wallet gives the quantity for that token. In this way, each wallet represents the link to a specific number of a specific token.\n\nThese wallets are a virtual relationship to tokens and are not to be confused with the software and hardware wallets that store the private keys to crypto accounts.\n",
        "operationId": "listWallets",
        "tags": [
          "DataWallets"
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl --location -g --request GET 'https://api.rarify.tech/data/wallets' \\\n -G \\\n--header \"Authorization: Bearer $RARIFY_API_KEY\" \\\n--data-urlencode 'filter[owner]=ethereum:5c2873b4FF8939c4BbF159E593DFc84a95eCF69c' \\\n--data-urlencode 'include=token'\n"
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter[owner]",
            "description": "Return wallets that are owned by the specified account IDs, in the format \"network:account ID\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "polygon:13bf45df6ca54c04f87ac65c40d00da6fde3a87f"
            }
          },
          {
            "in": "query",
            "name": "filter[token]",
            "description": "Show wallets that contain the specified tokens, in a comma-separated list in the format \"network:contract:token\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "polygon:6327de0b026cc5a6d2548d01267ef09d5834e48a:02"
            }
          },
          {
            "in": "query",
            "name": "filter[contract]",
            "description": "Show wallets that contain tokens from the specified contract, in a comma-separated list of addresses in the format \"network:contract\"",
            "required": false,
            "schema": {
              "type": "string",
              "example": "polygon:6327de0b026cc5a6d2548d01267ef09d5834e48a"
            }
          },
          {
            "in": "query",
            "name": "filter[network]",
            "description": "Show wallets from the specified blockchain networks, in a comma-separated list",
            "required": false,
            "schema": {
              "type": "string",
              "example": "polygon,ethereum"
            }
          },
          {
            "in": "query",
            "name": "page[limit]",
            "description": "The number of results per page (default: 10, maximum: 100)",
            "schema": {
              "type": "string",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page[cursor]",
            "description": "A pointer to start the page of results with. To get a link to the next page, use the URL in the \"links.next\" field in the response, which includes the value for this parameter.",
            "schema": {
              "type": "string",
              "example": "MTpmZmZiMDZkNTMwNjMzZjZkNTcyZWU3MTcyN2IzOTc1ZTBjMjM5NTBhOjAxOmVlMTcyMWQ5ZTkyNDIzNzI5NzQ1MWUyZTA5MzJjNWI2ZGQzNWU4NjM=:MTUwNDk0NDA="
            }
          },
          {
            "in": "query",
            "name": "include",
            "description": "The resources to include in the response, such as the collection that the NFTs belong to",
            "schema": {
              "type": "string",
              "enum": [
                "token",
                "token.contract"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Wallet"
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/Contract"
                          },
                          {
                            "$ref": "#/components/schemas/Token"
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "data": [
                      {
                        "id": "ethereum:3702f4c46785bbd947d59a2516ac1ea30f2babf2:25c5:554f413b34282f5e1d78367b6fc2f968c8e682ba",
                        "type": "wallets",
                        "attributes": {
                          "amount": "1"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "ethereum:554f413b34282f5e1d78367b6fc2f968c8e682ba",
                              "type": "accounts"
                            }
                          },
                          "token": {
                            "data": {
                              "id": "ethereum:3702f4c46785bbd947d59a2516ac1ea30f2babf2:25c5",
                              "type": "tokens"
                            }
                          }
                        }
                      },
                      {
                        "id": "12160977:98566280",
                        "type": "wallets",
                        "attributes": {
                          "amount": "1"
                        },
                        "relationships": {
                          "owner": {
                            "data": {
                              "id": "ethereum:554f413b34282f5e1d78367b6fc2f968c8e682ba",
                              "type": "accounts"
                            }
                          },
                          "token": {
                            "data": {
                              "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:227e",
                              "type": "tokens"
                            }
                          }
                        }
                      }
                    ],
                    "included": [
                      {
                        "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:227e",
                        "type": "tokens",
                        "attributes": {
                          "description": "",
                          "image_url": "https://www.larvalabs.com/cryptopunks/cryptopunk8830.png",
                          "name": "CryptoPunk #8830",
                          "token_id": "227e"
                        },
                        "relationships": {
                          "contract": {
                            "data": {
                              "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                              "type": "contracts"
                            }
                          },
                          "insights": {
                            "data": {
                              "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:227e",
                              "type": "insights-overview"
                            }
                          },
                          "insights_history": {
                            "data": {
                              "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:227e",
                              "type": "insights-history"
                            }
                          },
                          "metadata": {
                            "data": {
                              "id": "ethereum:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:1:b47e3cd837ddf8e4c57f05d70ab865de6e193bbb:227e",
                              "type": "raw-metadata"
                            }
                          }
                        }
                      },
                      {
                        "id": "ethereum:3702f4c46785bbd947d59a2516ac1ea30f2babf2:25c5",
                        "type": "tokens",
                        "attributes": {
                          "description": "",
                          "image_url": "https://galaxyfightclub.mypinata.cloud/ipfs/QmXXy4xTMYdicY2UWd6QTMNW3irg7z4SjBbabrMUAfg475/9669.png",
                          "name": "Galaxy Fighter #9669",
                          "token_id": "25c5"
                        },
                        "relationships": {
                          "contract": {
                            "data": {
                              "id": "ethereum:3702f4c46785bbd947d59a2516ac1ea30f2babf2",
                              "type": "contracts"
                            }
                          },
                          "insights": {
                            "data": {
                              "id": "ethereum:3702f4c46785bbd947d59a2516ac1ea30f2babf2:25c5",
                              "type": "insights-overview"
                            }
                          },
                          "insights_history": {
                            "data": {
                              "id": "ethereum:3702f4c46785bbd947d59a2516ac1ea30f2babf2:25c5",
                              "type": "insights-history"
                            }
                          },
                          "metadata": {
                            "data": {
                              "id": "ethereum:3702f4c46785bbd947d59a2516ac1ea30f2babf2:1:3702f4c46785bbd947d59a2516ac1ea30f2babf2:25c5",
                              "type": "raw-metadata"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/invalidParameter"
          },
          "401": {
            "$ref": "#/components/responses/invalidAuth"
          },
          "403": {
            "$ref": "#/components/responses/forbiddenFilters"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "APIToken": {
        "description": "Rarify manages authentication via bearer tokens.\n\nAll endpoints in the Rarify API use bearer token authentication. To get a token, sign up on our [dashboard](https://app.rarify.tech/) and go to the settings tab.\nAll requests must include your token in the `Authorization` header, as in this example:\n\n\n  ```shell\n  curl --request GET 'https://api.rarify.tech/data/contracts' \\\n  -G \\\n  --header \"Authorization: $RARIFY_API_KEY\" \\\n  --data-urlencode 'filter[name]=CryptoPunks'\n  ```",
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "OpenseaCollectionMetadata": {
        "type": "object",
        "required": [
          "seller_fee_basis_points",
          "fee_recipient",
          "name",
          "description",
          "image"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the collection",
            "example": "Rarify Awesome NFT"
          },
          "description": {
            "type": "string",
            "description": "A description of the collection",
            "example": "#The world’s most easy-to-use APIs for NFT integration\nWe agonize over the right abstractions so your teams don’t need to stitch together disparate systems or spend months integrating blockchain technology with your business solution."
          },
          "image": {
            "type": "string",
            "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
          },
          "external_link": {
            "type": "string",
            "example": "https://rarify.tech/"
          },
          "seller_fee_basis_points": {
            "type": "integer",
            "format": "int64",
            "example": 250,
            "description": "The percentage of the sale price to send to the royalty receiver; each 100 units represents 1% of the sale price"
          },
          "fee_recipient": {
            "type": "string",
            "description": "The external account in the token network to receive royalties",
            "example": "0x71c7656Ec7ab88b098deFB751B7401b6f6D8976f"
          }
        }
      },
      "ActivityEntryKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the activity entry of form `network:block_number:log_index:event_index`",
            "example": "polygon:123554456243556:54653432432:5"
          },
          "type": {
            "type": "string",
            "enum": [
              "activity-entries"
            ]
          }
        }
      },
      "TradeOperationKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the activity entry of form `network:block_number:log_index:event_index`",
            "example": "polygon:123554456243556:54653432432:5"
          },
          "type": {
            "type": "string",
            "enum": [
              "operations-trades"
            ]
          }
        }
      },
      "TransferOperationKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the activity entry of form `network:block_number:log_index:event_index`",
            "example": "polygon:123554456243556:54653432432:5"
          },
          "type": {
            "type": "string",
            "enum": [
              "operations-transfers"
            ]
          }
        }
      },
      "ActivityEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActivityEntryKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "block_number",
                  "network",
                  "log_index",
                  "event_index",
                  "transaction_hash",
                  "contract_address",
                  "time"
                ],
                "properties": {
                  "block_number": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 234765367452176,
                    "description": "Number of the block that is related to the activity entry."
                  },
                  "network": {
                    "type": "string",
                    "example": "polygon",
                    "description": "Name of the network that activity entry has been occured on."
                  },
                  "log_index": {
                    "type": "integer",
                    "format": "uint32",
                    "example": 1242334,
                    "description": "Index of the log entry in the block."
                  },
                  "event_index": {
                    "type": "integer",
                    "example": 653453245,
                    "format": "uint32",
                    "description": "Index of the event entry in the log entry."
                  },
                  "transaction_hash": {
                    "type": "string",
                    "description": "Hash of the transaction on the network that is related to the activity entry.",
                    "example": "531a23394ab5334a4445211bcff5754572ea86692617daaa30368dbed60158dc"
                  },
                  "time": {
                    "type": "string",
                    "format": "time.Time",
                    "description": "UTC time of the event occruance, RFC3339Nano format.",
                    "example": "2006-01-02T15:04:05.999999999Z07:00"
                  }
                }
              },
              "relationships": {
                "properties": {
                  "trade": {
                    "description": "Trade operation that is related to the activity entry. Assumed not to be empty in case `transfer` relationship is empty",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/TradeOperationKey"
                      }
                    }
                  },
                  "transfer": {
                    "description": "Transfer operation that is related to the activity entry. Assumed not to be empty in case `trade` relationship is empty",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/TransferOperationKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Order": {
        "type": "object",
        "required": [
          "asset",
          "amount",
          "owner"
        ],
        "properties": {
          "amount": {
            "type": "string",
            "description": "Amount of the offer in base units of the asset (ex. Wei for ETH).",
            "example": "10000000000000000000000"
          },
          "asset": {
            "type": "string",
            "description": "ID of the token traded of format `{network}:{contract}:{token_id}`.",
            "example": "polygon:66d575db1bba30b6364c04a484e14bc8dfee2bbb:0b"
          },
          "owner": {
            "type": "string",
            "description": "ID of the account related to the trade of format `{network}:{account_addr}`.",
            "example": "polygon:a515f7fb260095eebc860946273b8761b4fc9abd"
          }
        }
      },
      "TradeOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TradeOperationKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "buy_order",
                  "sell_order"
                ],
                "properties": {
                  "buy_order": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "sell_order": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        ]
      },
      "TokenKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e75f0cf1-1a5d-472a-805c-3a48e89e1be8"
          },
          "type": {
            "type": "string",
            "enum": [
              "tokens"
            ]
          }
        }
      },
      "TransferOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TransferOperationKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "from",
                  "to",
                  "amount",
                  "asset"
                ],
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "Source of the transfer"
                  },
                  "to": {
                    "type": "string",
                    "description": "Destination of the transfer"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the transfer"
                  },
                  "asset": {
                    "type": "string",
                    "description": "ID of the token transferred of format `{network}:{contract}:{token_id}`.",
                    "example": "polygon:66d575db1bba30b6364c04a484e14bc8dfee2bbb:0b"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "description": "The token that is related to the transfer.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/TokenKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Error": {
        "type": "object",
        "required": [
          "title",
          "status"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "Bad Request",
            "description": "A human-readable summary of the problem that does not change from occurrence to occurrence of the problem, except for purposes of localization"
          },
          "status": {
            "type": "string",
            "example": "400",
            "description": "The HTTP status code applicable to this problem, expressed as a string value"
          },
          "meta": {
            "type": "object",
            "description": "An object containing non-standard meta-information about the error",
            "example": {
              "error": "must be a valid UUID v4",
              "field": "filter[owner]"
            }
          }
        }
      },
      "Errors": {
        "type": "object",
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "DataContractKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "polygon:0x66d575db1bba30b6364c04a484e14bc8dfee2bbb"
          },
          "type": {
            "type": "string",
            "enum": [
              "contracts"
            ]
          }
        }
      },
      "RawMetadataKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "polygon:0x66d575db1bba30b6364c04a484e14bc8dfee2bbb"
          },
          "type": {
            "type": "string",
            "enum": [
              "raw-metadata"
            ]
          }
        }
      },
      "InsightsOverviewKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "polygon:0xd727F56933148e40F317eFfAfF498fEB27774d0e"
          },
          "type": {
            "type": "string",
            "enum": [
              "insights-overview"
            ]
          }
        }
      },
      "InsightsHistoryKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "polygon:0xd727F56933148e40F317eFfAfF498fEB27774d0e"
          },
          "type": {
            "type": "string",
            "enum": [
              "insights-history"
            ]
          }
        }
      },
      "InsightsTrendsKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "polygon:0xd727F56933148e40F317eFfAfF498fEB27774d0e"
          },
          "type": {
            "type": "string",
            "enum": [
              "insights-trends"
            ]
          }
        }
      },
      "TokenAttributesStatsKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the attribute in a format `network:contract:token`, as for contract `token_attributes` include, Id will be in a format `network:contract`",
            "example": "polygon:0x66d575db1bba30b6364c04a484e14bc8dfee2bbb:0x0b"
          },
          "type": {
            "type": "string",
            "enum": [
              "token-attributes-stats"
            ]
          }
        }
      },
      "DataContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataContractKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "network",
                  "address",
                  "primary_interface",
                  "tokens",
                  "unique_owners"
                ],
                "type": "object",
                "properties": {
                  "network": {
                    "type": "string",
                    "example": "polygon"
                  },
                  "address": {
                    "type": "string",
                    "example": "0x71c7656Ec7ab88b098deFB751B7401b6f6D8976f",
                    "description": "Hex encoded unique identifier of the collection in the network"
                  },
                  "primary_interface": {
                    "type": "string",
                    "description": "Primary interface that the contract implements",
                    "enum": [
                      "erc_721",
                      "erc_1155",
                      "erc_20",
                      "need_recheck",
                      "native_token"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contract or the collection of tokens that the contract creates",
                    "example": "Rarify Awesome NFT"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the collection of tokens",
                    "example": "My example contract that I use to create ERC1155 NFTs"
                  },
                  "image_url": {
                    "type": "string",
                    "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
                  },
                  "image_preview_icon_url": {
                    "type": "string",
                    "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
                  },
                  "image_preview_small_url": {
                    "type": "string",
                    "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
                  },
                  "image_preview_large_url": {
                    "type": "string",
                    "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
                  },
                  "external_url": {
                    "type": "string",
                    "example": "https://rarify.tech/"
                  },
                  "royalties_fee_basic_points": {
                    "type": "integer",
                    "format": "int64",
                    "example": 250,
                    "description": "The percentage of the sale price to send to the royalty receiver; each 100 units represents 1% of the sale price"
                  },
                  "royalties_receiver": {
                    "type": "string",
                    "description": "The account to receive royalties",
                    "example": "0x1234567890"
                  },
                  "tokens": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 250,
                    "description": "Number of tokens that belong to a contract"
                  },
                  "unique_owners": {
                    "type": "integer",
                    "format": "uint64",
                    "example": 5,
                    "description": "Number of unique accounts that own a token in the collection"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Metadata of the contract",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/RawMetadataKey"
                      }
                    }
                  },
                  "insights": {
                    "description": "An overview of the contract's performance",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/InsightsOverviewKey"
                      }
                    }
                  },
                  "insights_history": {
                    "description": "Historical information about the contract's performance",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/InsightsHistoryKey"
                      }
                    }
                  },
                  "insights_trends": {
                    "description": "An overview of the contract's market trends.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/InsightsTrendsKey"
                      }
                    }
                  },
                  "token_attributes": {
                    "description": "List of attributes that are available for tokens within a contract",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/TokenAttributesStatsKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "RawMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RawMetadataKey"
          },
          {
            "type": "object",
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "metadata_fetched_at"
                ],
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "example": "https://api.rarify.tech/core/contracts/d3886647-9d1e-4216-be28-6cf55911d0c2/collection-metadata"
                  },
                  "payload": {
                    "type": "object",
                    "format": "json.RawMessage"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "time.Time",
                    "example": "2006-01-02T15:04:05.999999999Z07:00",
                    "description": "The time when the metadata was successfully retrieved"
                  },
                  "metadata_fetch_error": {
                    "type": "string",
                    "description": "Description of the error that has occured during last metadata fetching"
                  }
                }
              }
            }
          }
        ]
      },
      "PaymentAsset": {
        "type": "object",
        "required": [
          "code",
          "image_url"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "ETH"
          },
          "image_url": {
            "type": "string",
            "example": "https://rarify-public.s3.amazonaws.com/eth_logo.svg"
          }
        }
      },
      "InsightsOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InsightsOverviewKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "period",
                      "payment_asset",
                      "trades",
                      "volume",
                      "unique_buyers",
                      "avg_price",
                      "min_price",
                      "max_price"
                    ],
                    "properties": {
                      "period": {
                        "description": "The time period for pricing and trading information",
                        "type": "string",
                        "enum": [
                          "24h",
                          "7d",
                          "30d",
                          "90d",
                          "365d",
                          "all_time"
                        ],
                        "example": "7d"
                      },
                      "payment_asset": {
                        "type": "object",
                        "$ref": "#/components/schemas/PaymentAsset"
                      },
                      "trades": {
                        "type": "number",
                        "format": "int64",
                        "description": "Number of trades",
                        "example": 256
                      },
                      "volume": {
                        "type": "string",
                        "example": "12000000000000",
                        "description": "Volume of trades in base units of payment asset (wei for ETH)"
                      },
                      "unique_buyers": {
                        "type": "number",
                        "format": "int64",
                        "example": 256,
                        "description": "Number of unique buyers"
                      },
                      "avg_price": {
                        "type": "string",
                        "example": "12000000000000",
                        "description": "Average price in base units of payment asset (wei for ETH)"
                      },
                      "min_price": {
                        "type": "string",
                        "example": "10000000000000",
                        "description": "Lowest price in base units of payment asset (wei for ETH)"
                      },
                      "max_price": {
                        "type": "string",
                        "example": "14000000000000",
                        "description": "Highest price in base units of payment asset (wei for ETH)"
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "InsightsTrends": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InsightsTrendsKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "period",
                      "payment_asset",
                      "volume_change",
                      "volume_change_percent"
                    ],
                    "properties": {
                      "period": {
                        "description": "The time period for pricing and trading information",
                        "type": "string",
                        "enum": [
                          "24h",
                          "7d",
                          "30d",
                          "90d",
                          "365d",
                          "all_time"
                        ],
                        "example": "7d"
                      },
                      "payment_asset": {
                        "type": "object",
                        "$ref": "#/components/schemas/PaymentAsset"
                      },
                      "volume_change": {
                        "type": "string",
                        "example": "-3000000",
                        "description": "Volume change since the last period in base units of payment asset (wei for ETH)"
                      },
                      "volume_change_percent": {
                        "type": "number",
                        "example": 1.33,
                        "description": "Volume change since the last period in percents."
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "InsightsPoint": {
        "type": "object",
        "required": [
          "trades",
          "volume",
          "unique_buyers",
          "avg_price",
          "min_price",
          "max_price",
          "time"
        ],
        "properties": {
          "trades": {
            "type": "number",
            "format": "int64",
            "description": "Number of trades",
            "example": 256
          },
          "volume": {
            "type": "string",
            "example": "12000000000000",
            "description": "Volume of trades in base units of payment asset (wei for ETH)"
          },
          "unique_buyers": {
            "type": "number",
            "format": "int64",
            "example": 256,
            "description": "Number of unique buyers"
          },
          "avg_price": {
            "type": "string",
            "example": "12000000000000",
            "description": "Average price in base units of payment asset (wei for ETH)"
          },
          "min_price": {
            "type": "string",
            "example": "10000000000000",
            "description": "Lowest price in base units of payment asset (wei for ETH)"
          },
          "max_price": {
            "type": "string",
            "example": "14000000000000",
            "description": "Highest price in base units of payment asset (wei for ETH)"
          },
          "time": {
            "type": "string",
            "format": "time.Time",
            "example": "2006-01-02T15:04:05.999999999Z07:00"
          }
        }
      },
      "InsightsHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InsightsHistoryKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "payment_asset",
                  "history"
                ],
                "properties": {
                  "payment_asset": {
                    "type": "object",
                    "$ref": "#/components/schemas/PaymentAsset"
                  },
                  "history": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InsightsPoint"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "TokenAttributeStats": {
        "type": "object",
        "required": [
          "value",
          "trait_type",
          "rarity_percentage",
          "overall_with_trait_value"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the attribute"
          },
          "trait_type": {
            "type": "string",
            "description": "Type of the attribute"
          },
          "rarity_percentage": {
            "type": "string",
            "description": "Percent of tokens that have an attribute of this `value` for this `trait_type`"
          },
          "overall_with_trait_value": {
            "type": "integer",
            "format": "int64",
            "description": "How many tokens are there having an attibute of this `value` for this `trait_type`"
          }
        }
      },
      "TokenAttributesStats": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TokenAttributesStatsKey"
          },
          {
            "type": "object",
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "attributes_stats"
                ],
                "properties": {
                  "attributes_stats": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TokenAttributeStats"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "FloorPriceKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "ethereum:0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d:1656072994"
          },
          "type": {
            "type": "string",
            "enum": [
              "floor-price"
            ]
          }
        }
      },
      "FloorPrice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FloorPriceKey"
          },
          {
            "type": "object",
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "price",
                  "payment_asset"
                ],
                "properties": {
                  "payment_asset": {
                    "type": "object",
                    "$ref": "#/components/schemas/PaymentAsset"
                  },
                  "price": {
                    "type": "string",
                    "example": "12000000000000",
                    "description": "Price in base units of payment asset (wei for ETH)"
                  }
                }
              }
            }
          }
        ]
      },
      "InsightsKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "polygon:0x66d575db1bba30b6364c04a484e14bc8dfee2bbb"
          },
          "type": {
            "type": "string",
            "enum": [
              "insights"
            ]
          }
        }
      },
      "Insights": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InsightsKey"
          },
          {
            "type": "object",
            "required": [
              "relationships"
            ],
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "insights": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/InsightsOverviewKey"
                      }
                    }
                  },
                  "history": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/InsightsHistoryKey"
                      }
                    }
                  },
                  "trends": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/InsightsTrendsKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "WhaleKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the whale in a format `network:contract:account_address`",
            "example": "polygon:9792825d9ba286395e48e45c63faad1287db42a3:71c7656Ec7ab88b098deFB751B7401b6f6D8976f"
          },
          "type": {
            "type": "string",
            "enum": [
              "whales"
            ]
          }
        }
      },
      "AccountKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "ethereum:a858ddc0445d8131dac4d1de01f834ffcba52ef1"
          },
          "type": {
            "type": "string",
            "enum": [
              "accounts"
            ]
          }
        }
      },
      "Whale": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WhaleKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "owner",
                  "tokens"
                ],
                "type": "object",
                "properties": {
                  "tokens": {
                    "type": "string",
                    "description": "number of different tokens of the contract the particular whale is holding. In the case of ERC1155 if user `U` holds 5000 `A` tokens and 1 `B` token, `tokens` will be equal to `2`",
                    "example": "347528973465782346589273465982346"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "owner"
                ],
                "properties": {
                  "owner": {
                    "description": "Identifier of the whale account in format `{network}:{account_address}`.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/AccountKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "MetadataRefreshKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the resource (contract/token), metadata of which will be refreshed. Format is `network:contract` and `network:contract:token_id` for contract and NFT respectively\n",
            "example": "polygon:9792825d9ba286395e48e45c63faad1287db42a3:0887"
          },
          "type": {
            "type": "string",
            "enum": [
              "contract-metadata-refresh-action",
              "token-metadata-refresh-action"
            ]
          }
        }
      },
      "IdentityKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "999f724e-e8fd-4f0b-bf37-27fed6c3f1e0"
          },
          "type": {
            "type": "string",
            "enum": [
              "identities"
            ]
          }
        }
      },
      "DataTokenKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "polygon:0x66d575db1bba30b6364c04a484e14bc8dfee2bbb:0x0b"
          },
          "type": {
            "type": "string",
            "enum": [
              "tokens"
            ]
          }
        }
      },
      "MetadataRefresh": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MetadataRefreshKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "created_at"
                ],
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "time.Time",
                    "description": "When the metadata refresh request was created, in the RFC3999Nano format",
                    "example": "2006-01-02T15:04:05.999999999Z07:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "requester": {
                    "description": "The identity that requested the metadata update.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/IdentityKey"
                      }
                    }
                  },
                  "token": {
                    "description": "The token that is related to the Metadata. Assumed not to be empty when the `contract` relation is empty",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/DataTokenKey"
                      }
                    }
                  },
                  "contract": {
                    "description": "The contract that is related to the Metadata. Assumed not to be empty when the `token` relation is empty",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/DataContractKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "AccountActivityKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the activity entry of form `network:contract:address:period`",
            "example": "polygon:708496026cfd52d19d50fd1cdcbb5c986a68071e:c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2:7d"
          },
          "type": {
            "type": "string",
            "enum": [
              "account-activity"
            ]
          }
        }
      },
      "AccountActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountActivityKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "trades",
                  "transfers",
                  "interactions"
                ],
                "properties": {
                  "interactions": {
                    "type": "integer",
                    "format": "uint32",
                    "example": 10,
                    "description": "Total number of interactions with the given contract."
                  },
                  "transfers": {
                    "type": "integer",
                    "format": "uint32",
                    "example": 10,
                    "description": "Total number of transfers associated with this address."
                  },
                  "trades": {
                    "type": "integer",
                    "format": "uint32",
                    "example": 10,
                    "description": "Total number of trades associated with this address."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "account"
                ],
                "properties": {
                  "account": {
                    "description": "Account that interacted with the contract.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/AccountKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "DataToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataTokenKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "token_id"
                ],
                "type": "object",
                "properties": {
                  "token_id": {
                    "type": "string",
                    "description": "A hex-encoded unique identifier of the token within the contract",
                    "example": "0887"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token",
                    "example": "Rarify Awesome NFT"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the token",
                    "example": "My example contract that I use to create ERC1155 NFTs"
                  },
                  "image_url": {
                    "type": "string",
                    "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
                  },
                  "image_preview_icon_url": {
                    "type": "string",
                    "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
                  },
                  "image_preview_small_url": {
                    "type": "string",
                    "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
                  },
                  "image_preview_large_url": {
                    "type": "string",
                    "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Metadata of the token",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/RawMetadataKey"
                      }
                    }
                  },
                  "insights": {
                    "description": "An overview of the tokens' performance",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/InsightsOverviewKey"
                      }
                    }
                  },
                  "insights_history": {
                    "description": "Historical information about the tokens' performance",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/InsightsHistoryKey"
                      }
                    }
                  },
                  "contract": {
                    "description": "The contract that manages the token",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/DataContractKey"
                      }
                    }
                  },
                  "attributes_stats": {
                    "description": "Slice of attributes that are related to the particular token",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/TokenAttributesStatsKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "WalletKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the wallet in a format `account_external_id:network:contract:token`",
            "example": "0x71c7656Ec7ab88b098deFB751B7401b6f6D8976f:polygon:9792825d9ba286395e48e45c63faad1287db42a3:0887"
          },
          "type": {
            "type": "string",
            "enum": [
              "wallets"
            ]
          }
        }
      },
      "Wallet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WalletKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "amount"
                ],
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "Amount of tokens for the particular wallet formatted as `string` with `int256` value in it.",
                    "type": "string",
                    "example": "1"
                  },
                  "last_known_indexed_block": {
                    "description": "Highest number of the block for which data has been already indexed. It is not guaranteed that all previous blocks have been indexed and processed – this value indicates only the highest block number noted by indexers.",
                    "type": "integer",
                    "format": "int64",
                    "example": 23645764523
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "token",
                  "owner"
                ],
                "properties": {
                  "token": {
                    "description": "Token which the balance entity keeps track of.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/TokenKey"
                      }
                    }
                  },
                  "owner": {
                    "description": "The account which owns the balance entity",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/AccountKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ContractKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "7863a087-43fe-46a6-bac1-3a652121f2a8"
          },
          "type": {
            "type": "string",
            "enum": [
              "contracts"
            ]
          }
        }
      },
      "CollectionMetadata": {
        "type": "object",
        "required": [
          "royalties_fee_basic_points",
          "name",
          "description",
          "image_url",
          "external_url"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the contract or the collection of tokens that the contract creates",
            "example": "Rarify Awesome NFT"
          },
          "description": {
            "type": "string",
            "description": "The description of the collection of tokens",
            "example": "My example contract that I use to create ERC1155 NFTs"
          },
          "image_url": {
            "type": "string",
            "example": "https://rarify.tech/assets/images/main-splash.e0d35692.png"
          },
          "external_url": {
            "type": "string",
            "example": "https://rarify.tech/"
          },
          "royalties_fee_basic_points": {
            "type": "integer",
            "format": "int64",
            "example": 250,
            "description": "The percentage of the sale price to send to the royalty receiver; each 100 units represents 1% of the sale price"
          },
          "royalties_receiver": {
            "type": "string",
            "description": "The external account in the token network to receive royalties; the default is the owner of the contract",
            "example": "0x1234567890"
          }
        }
      },
      "RarifyERC721": {
        "type": "object",
        "description": "The ERC721 contract parameters",
        "required": [
          "name",
          "symbol",
          "metadata"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the token",
            "example": "Rarify NFT"
          },
          "symbol": {
            "type": "string",
            "description": "The symbol of the token",
            "example": "RARI"
          },
          "metadata": {
            "$ref": "#/components/schemas/CollectionMetadata"
          }
        }
      },
      "RarifyERC1155": {
        "type": "object",
        "description": "The ERC1155 contract parameters",
        "required": [
          "metadata"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/CollectionMetadata"
          }
        }
      },
      "NetworkKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "rarinet"
          },
          "type": {
            "type": "string",
            "enum": [
              "networks"
            ]
          }
        }
      },
      "TransactionKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "65d9bfd2-40fd-4668-8143-ada15642f4de"
          },
          "type": {
            "type": "string",
            "enum": [
              "transactions"
            ]
          }
        }
      },
      "Contract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContractKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "name",
                  "created_at",
                  "updated_at"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My example contract"
                  },
                  "external_address": {
                    "type": "string",
                    "example": "0x71c7656Ec7ab88b098deFB751B7401b6f6D8976f",
                    "description": "The address of the contract in the external network"
                  },
                  "erc721": {
                    "$ref": "#/components/schemas/RarifyERC721"
                  },
                  "erc1155": {
                    "$ref": "#/components/schemas/RarifyERC1155"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "time.Time",
                    "description": "The time the request was made",
                    "example": "2006-01-02T15:04:05.999999999Z07:00"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "time.Time",
                    "description": "The time the status of the request was updated",
                    "example": "2006-01-02T15:04:05.999999999Z07:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "network",
                  "owner",
                  "tx"
                ],
                "properties": {
                  "network": {
                    "description": "The network on which the contract is deployed.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/NetworkKey"
                      }
                    }
                  },
                  "owner": {
                    "description": "The internal identity of the owner.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/IdentityKey"
                      }
                    }
                  },
                  "tx": {
                    "description": "The transaction that deployed the contract",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/TransactionKey"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "MetadataKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "1481c07d-da7f-425d-a598-2f0fd6f4cd82"
          },
          "type": {
            "type": "string",
            "enum": [
              "metadata"
            ]
          }
        }
      },
      "MetaSellOrderKey": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "5f7bfe19-0914-40f0-958b-120ffd711c89"
          },
          "type": {
            "type": "string",
            "enum": [
              "meta-sell-order"
            ]
          }
        }
      },
      "Token": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TokenKey"
          },
          {
            "type": "object",
            "required": [
              "attributes",
              "relationships"
            ],
            "properties": {
              "attributes": {
                "required": [
                  "external_id",
                  "created_at",
                  "updated_at"
                ],
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "description": "A hex-encoded uint256",
                    "example": "0x71c7656Ec7ab88b098deFB751B7401b6f6D8986f"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "time.Time",
                    "description": "The time that the token was created",
                    "example": "2006-01-02T15:04:05.999999999Z07:00"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "time.Time",
                    "description": "The time that the token was updated",
                    "example": "2006-01-02T15:04:05.999999999Z07:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "required": [
                  "contract",
                  "sell_orders"
                ],
                "properties": {
                  "contract": {
                    "description": "The contract that manages the token.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/ContractKey"
                      }
                    }
                  },
                  "metadata": {
                    "description": "The metadata that is attached to the token.",
                    "type": "object",
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/MetadataKey"
                      }
                    }
                  },
                  "sell_orders": {
                    "description": "Orders that sell this token",
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/MetaSellOrderKey"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "responses": {
      "invalidParameter": {
        "description": "One of the parameters is invalid. Refer to the response body for details.",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "invalidAuth": {
        "description": "You must provide a valid authorization header."
      },
      "forbiddenFilters": {
        "description": "You are not allowed to perform requests with the specified filters."
      },
      "notFound": {
        "description": "Requested resource does not exist."
      }
    }
  },
  "security": [
    {
      "APIToken": []
    }
  ]
}